package parser

import (
	"io"
	"io/ioutil"

	"github.com/PuerkitoBio/exp/peg/ast"
)

// Generated parser would expose the following functions:
//
// func ParseFile(filename string) (interface{}, error) {
// 	f, err := os.Open(filename)
// 	if err != nil {
// 		return nil, err
// 	}
// 	defer f.Close()
// 	return Parse(filename, f)
// }
//
// func Parse(filename string, r io.Reader) (interface{}, error) {
// 	// g := grammar generated by buildParser()
// 	return parseUsingAST(filename, r, g)
// }

func parseUsingAST(filename string, r io.Reader, g *ast.Grammar) (interface{}, error) {
	b, err := ioutil.ReadAll(r)
	if err != nil {
		return nil, err
	}

	p := &parser{filename: filename, data: b, cur: 0}
	return p.parse(g)
}

type parser struct {
	filename string
	data     []byte
	cur      int
}

func (p *parser) parse(g *ast.Grammar) (interface{}, error) {

}
